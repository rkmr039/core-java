/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2019-09-04 03:45:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.hcl.ems.LeaveTypes;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

public final class ApplyLeaves_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.hcl.ems.LeaveTypes");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.text.DateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script >\r\n");
      out.write("function setEndDate(e){\r\n");
      out.write("\t var eDate = e.target.value;\r\n");
      out.write("\tvar date = new Date(eDate);\r\n");
      out.write("\tif(date.getDay() == 0 || date.getDay() == 6) {\r\n");
      out.write("\t\talert(\"It's Weekend...Select Another date\");\r\n");
      out.write("\t\tdocument.getElementById(\"sDateInput\").value = \"\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t eDateInput.min = eDate;\r\n");
      out.write("\t}\r\n");
      out.write("function setNoDays(e){\r\n");
      out.write("\tvar d1 = eDateInput.value;\r\n");
      out.write("\tvar date1 = new Date(d1);\r\n");
      out.write("\tif(date1.getDay() == 0 || date1.getDay() == 6) {\r\n");
      out.write("\t\talert(\"It's Weekend...Select Another date\");\r\n");
      out.write("\t\tdocument.getElementById(\"eDateInput\").value = \"\";\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\tvar d2 = sDateInput.value;\r\n");
      out.write("\tvar date2 = new Date(d2);\r\n");
      out.write("\t   var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n");
      out.write("       var diffDays = Math.abs((date1.getTime() - date2.getTime()) / (oneDay));\r\n");
      out.write("       // alert(diffDays); \r\n");
      out.write("       \r\n");
      out.write("       // Subtract holidays from nodays\r\n");
      out.write("       /* SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n");
      out.write("       Date startDate = sdf.parse(date1);\r\n");
      out.write("       alert(startDate); */\r\n");
      out.write("      \r\n");
      out.write("      // alert(date1.getClass());\r\n");
      out.write("     \r\n");
      out.write("      document.getElementById(\"noDays\").value = diffDays+1;\r\n");
      out.write("}\t\r\n");
      out.write("</script>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    background:#333;\r\n");
      out.write("}\r\n");
      out.write("#mainDiv{\r\n");
      out.write("\tcolor:black;\r\n");
      out.write("\tbackground-color:#EEE;\r\n");
      out.write("\ttop:0;\r\n");
      out.write("\tbottom:0;\r\n");
      out.write("\tright:0;\r\n");
      out.write("\tleft:0;\r\n");
      out.write("\tmargin:auto;\r\n");
      out.write("\tposition:absolute;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Apply leave | EMS</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table class=\"container border rounded w-50 h-50\" id=\"mainDiv\">\r\n");
      out.write("\t<form method=\"get\" action=\"Apply.jsp\">\r\n");
      out.write("\t<div class=\"row \">\r\n");
      out.write("\t\t<tr style=\"text-align:center\">\r\n");
      out.write("\t\t\t<th colspan=\"2\"><p id=\"page\">Apply Leave</p></th>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\t\t<th>Employee ID :<th> \r\n");
      out.write("\t\t\t<input type=\"text\" readonly=\"readonly\" class=\"form-control\" value=");
      out.print(session.getAttribute("EMP_ID") );
      out.write(" name=\"empId\"/>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t");

		Date d = new Date();
		SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		String sDate = sdf.format(d);
		
	
      out.write("\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\t\t<th >Start Date</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type='date' name=\"startDate\" class=\"form-control\" id=\"sDateInput\" min=");
      out.print(sDate);
      out.write(" required onchange=\"setEndDate(event);\" />\r\n");
      out.write("            </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\t\t<th>End Date</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type='date' name=\"endDate\" class=\"form-control\" id=\"eDateInput\" required onchange=\"setNoDays(event);\" />\r\n");
      out.write("            </td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\t\t<th>Number of Days</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"noDays\" class=\"form-control\" id=\"noDays\" required />\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t<th>Leave Type</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<select name=\"type\">\r\n");
      out.write("\t\t\t\t\t");

						int len = LeaveTypes.values().length;
						LeaveTypes[] ls = LeaveTypes.values();
						for(LeaveTypes type: ls) {
							out.println("<option class='form-control'>" + type.toString()+"</option>");
						}
					
      out.write("\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr class=\"form-froup\">\r\n");
      out.write("\t\t\t<th>Leave Reason</th>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<input type=\"text\" class=\"form-control\" name=\"reason\"/ required>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr  >\r\n");
      out.write("\t\t\t<td><input class=\"btn btn-primary\" type=\"submit\" value=\"Apply\" name=\"apply\"/></td>\r\n");
      out.write("\t\t\t<td><input class=\"btn btn-primary\" type=\"reset\" onClick=\"javascript:window.location.href='dashboard.jsp'\" value=\"Cancel\" name=\"cancel\"/></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t</table>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
