package com.hcl.library;

import static org.junit.Assert.*;

import java.sql.Connection;

import org.junit.Test;

public class LibraryTestCases {

	@Test
	public void bookGetterSetterTest (){
		Book obj = new Book();
		obj.setId(90);
		obj.setName("Test");
		obj.setAuthor("DenissRitchi");
		obj.setDept("Testing");
		obj.setEdition("5th");
		obj.setNos(20);
		
		assertEquals(90, obj.getId());
		assertEquals("Test", obj.getName());
		assertEquals("DenissRitchi", obj.getAuthor());
		assertEquals("Testing", obj.getDept());
		assertEquals("5th", obj.getEdition());
		assertEquals(20, obj.getNos());
		
	}

	@Test
	public void testDaoConnection() {
		assertNotNull(DaoConnection.getConnection());
	}
	
	@Test
	public void loginTest() {
		User user = new User();
		user.setUsername("1");
		user.setPassword("1");
		String[] res = LibraryBal.loginBal(user);		
		assertEquals("Logged In...", res[0]);
		assertEquals(user.getUsername(), res[1]);
		
		user.setPassword("wrongpassword");
		res = LibraryBal.loginBal(user);		
		assertEquals("Invalid Login Credentials...", res[0]);
		assertEquals("Error", res[1]);
	}
	
	@Test
	public void usersGetterAndSetterTest() {
	    User obj = new User();
	    obj.setPassword("12345");
	    obj.setUsername("12345");
	    
	    assertEquals("12345", obj.getPassword());
	    assertEquals("12345", obj.getUsername());
	    
	}

	@Test
	public void issueBookBalTest() {
		assertFalse(LibraryBal.issueBookBal("1",3));
		assertTrue(LibraryBal.issueBookBal("1",9));
	}
	
	@Test
	public void returnBookTest() {
		assertEquals("<br/>**********Returned Successfully**********", LibraryBal.returnBookBal("1", 9) );
	}
	
	@Test
	public void showHistoryTest() {
		String result = LibraryBal.showHistoryBal("1");
		char[] resArr = result.toCharArray();
		int len = 0;
		for (char c : resArr) {
			if(c == '/') {
				len++;
			}
		}
		String cmd = "select Count(*) from transreturn where username='1'";
	}
	

}
