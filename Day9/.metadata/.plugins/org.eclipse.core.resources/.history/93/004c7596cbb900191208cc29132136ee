package com.hcl.inventry;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class InventryDao {
	
	 Connection con;
     PreparedStatement pst;
  public int generateOrderId() {
	  con = DaoConnection.getConnection();
	  int orderid = 0;
	  String cmd = "SELECT CASE WHEN MAX(OrderId) IS NULL "
	            + " THEN 1 ELSE MAX(OrderId) + 1 END orderNo "
	            + " FROM Orders ";
	  
	  try {
	      pst = con.prepareStatement(cmd);
	      ResultSet rs = pst.executeQuery();
	      rs.next();
	      accno = rs.getInt("accno");
	      
	    } catch (SQLException e) {
	      e.printStackTrace();
	    }
	  return orderid;
  }
  public String generateStockIdDao() {
	  con = DaoConnection.getConnection();
	  String stockId = "";
	  try {
		  String cmd = "SELECT * FROM Stock ORDER BY stockid DESC LIMIT 1;";
          pst = con.prepareStatement(cmd);
          ResultSet rs = pst.executeQuery();
          if (rs.next()) {
        	  String str = rs.getString("stockid");
        	  str = str.substring(1);
        	  int tempId = Integer.parseInt(str);
        	  tempId += 1;
        	  stockId = String.format("S%03d", tempId);
          }
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	  
	  return stockId;
	  
  }
	public String addStockDao(Stock stock) {
		  con = DaoConnection.getConnection();
		  String result = "";
		  String cmd = "INSERT INTO Stock values(?,?,?,?);";
		  try {
			pst = con.prepareStatement(cmd);
			pst.setString(1, stock.getStockId());
			pst.setString(2, stock.getItemName());
			pst.setDouble(3, stock.getPrice());
			pst.setInt(4, stock.getquantityAvail());
			pst.executeUpdate();
			result = "Stock Added";
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		  return result;
  }
  
  public Stock searchStockDao(String stockId) {
	con = DaoConnection.getConnection();
	String cmd = "SELECT * FROM Stock WHERE stockid = ?;";
	Stock stock = null;
	try {
		pst = con.prepareStatement(cmd);
		pst.setString(1, stockId);
		ResultSet rs = pst.executeQuery();
		if (rs.next()) {
			stock = new Stock();
			stock.setStockId(stockId);
			stock.setItemName(rs.getString("ItemName"));
			stock.setPrice(rs.getDouble("Price"));
			stock.setquantityAvail(rs.getInt("QuantityAvail"));
		}
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return stock;
  }
  
  public String placeOrderDao(Order order) {
	  con = DaoConnection.getConnection();
	  String result = "";
	  int qnty = order.getQtyOrd();
	  String stockid = order.getStockid();
	  String cmd = "SELECT QuantityAvail FROM Stock WHERE stockid=?;";
	  
	  try {
		pst = con.prepareStatement(cmd);
		 pst.setString(1, stockid);
		  ResultSet rs = pst.executeQuery();
		  if (rs.next()) {
			  int tempQnty = rs.getInt("QuantityAvail");
			  if (qnty <= tempQnty) {
				  cmd = "INSERT INTO Order values(?,?,?,?);";
				  pst = con.prepareStatement(cmd);
                  pst.setInt(1, order.getOrderid());
                  pst.setString(2, order.getStockid());
                  pst.setInt(3, order.getQtyOrd());
                  pst.setDouble(4, order.getBillAmt());
                  pst.executeUpdate();
                  result = "Order Placed";
			  } else {
				  result = "Stock Not Available";
			  }
		  } else {
			  result = "Stock ID Incorrect";
		  }
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return result; 
  }
}
